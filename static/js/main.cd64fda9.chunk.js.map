{"version":3,"sources":["reportWebVitals.js","helpers/helpers.js","components/token.jsx","components/sweep.jsx","components/main.jsx","App.js","index.js","helpers/constants.js","helpers/ABI.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","helpers","provider","account","APIKeyString","to","chainId","this","getBalance","userBalanceEth","getGasPrice","gasPrice","txObj","value","estimateGas","gasLimit","totalCost","ethers","BigNumber","from","mul","sub","getSigner","sendTransaction","balancesMapping","balanceObj","Contract","address","ERC20","connect","transfer","balance","console","log","catch","error","contract","get1InchTradeData","tx","approvalAddress","tokenContract","approve","unlimitedAllowance","tradeToEthWith1Inch","query","OneInchAPIURL","ethAddress","toString","request","get","response","body","DEXAddress","message","JSON","parse","text","includes","substring","length","result","toTokenAmount","zksyncContract","zksyncAddress","ZKSYNC","depositETH","allowance","_hex","depositERC20","amount","getERC20Tokens","erc20TokensObj","getERC721Tokens","erc721TokensObj","getAllERC20Balances","erc20Balances","getAllERC721Balances","erc721Balances","a","seen","filter","item","hasOwnProperty","tokensObj","contracts","uniq","contractAddresses","names","tokenNames","index","tokenIds","tokenId","getStillOwnedERC721","type","decimals","name","push","erc20Contracts","contractAddress","getERC20Balance","ERC721","ownerOf","owner","toLowerCase","balanceOf","erc20Query","getQueryERC20Events","tokens","tokenDecimals","call","results","tokenName","tokenDecimal","erc721Query","getQueryERC721Events","undefined","tokenID","token","props","state","swapButton","l2MigrationButton","transferToken","zksyncSupportedTokens","button","className","onClick","migrateToZksync","setState","getQuoteInEth1Inch","quote","setL2MigrationButton","set1InchButton","formattedBalance","formatFixed","Math","max","parseInt","setTransferClick","e","Component","sweep","map","id","sendAllEth","migrateEthtoL2","sendAllTokens","main","setReadyClick","bind","load","window","ethereum","enable","accounts","providers","Web3Provider","web3","currentProvider","h","getTokenBalances","document","getElementById","hidden","utils","isAddress","alert","sweepElement","href","target","alt","src","width","height","placeholder","App","ReactDOM","render","StrictMode","module","exports"],"mappings":"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","file":"static/js/main.cd64fda9.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { unlimitedAllowance, zksyncAddress, OneInchAPIURL, ethAddress } from \"./constants\";\nimport { ZKSYNC, ERC20, ERC721 } from \"./ABI.js\";\nimport { ethers } from \"ethers\";\nimport request from 'superagent';\n\nclass helpers {\n\n    constructor(provider, account, APIKeyString, to, chainId) {\n        this.provider = provider;\n        this.account = account;\n        this.APIKeyString = APIKeyString;\n        this.to = to;\n        this.chainId = chainId;\n    }\n\n    async sendAllEth() {\n        const userBalanceEth = await this.provider.getBalance(this.account);\n        const gasPrice = await this.provider.getGasPrice();\n        let txObj = {\n            to: this.to,\n            value: userBalanceEth\n        };\n        const gasLimit = await this.provider.estimateGas(txObj);\n        const totalCost = ethers.BigNumber.from(gasLimit).mul(ethers.BigNumber.from(gasPrice));\n        txObj.value = userBalanceEth.sub(totalCost);\n        await this.provider.getSigner().sendTransaction(txObj);\n    }\n\n    async sendAllTokens(balancesMapping) {\n        for(const balanceObj of balancesMapping) {\n            const contract = new ethers.Contract(balanceObj.address, ERC20).connect(this.provider.getSigner());\n            contract.transfer(this.to, balanceObj.balance)\n                .then(console.log)\n                .catch(console.error);\n        }\n    }\n\n    async transferToken(balanceObj) {\n        try {\n            const contract = new ethers.Contract(balanceObj.address, ERC20).connect(this.provider.getSigner());\n            return contract.transfer(this.to, balanceObj.balance);\n        } catch (e) {\n            return e;\n        }\n    }\n\n    async tradeToEthWith1Inch(balanceObj) {\n        const { tx, approvalAddress } = await this.get1InchTradeData(balanceObj);\n        if(approvalAddress) {\n            const tokenContract = new ethers.Contract(balanceObj.address, ERC20).connect(this.provider.getSigner());\n            await tokenContract.approve(approvalAddress, unlimitedAllowance);\n            // now that we are approved, try again\n            await this.tradeToEthWith1Inch(balanceObj);\n        } else {\n            return this.provider.sendTransaction(tx);\n        }\n    }\n\n    async get1InchTradeData(balanceObj) {\n        try {\n            const query = `${OneInchAPIURL}/swap?fromTokenAddress=${balanceObj.address}&toTokenAddress=${ethAddress}&amount=${balanceObj.balance.toString()}&fromAddress=${this.account}&slippage=${5}`;\n            const response = await request.get(query);\n            const tx = response.body.tx;\n            const DEXAddress = tx.to;\n            return {\n                response: response,\n                tx: tx,\n                DEXAddress: DEXAddress\n            }\n        } catch(e) {\n            console.error(e);\n            const message = JSON.parse(e.response.text).message;\n            if(message.includes(\"Not enough allowance\")) {\n                return {\n                    approvalAddress: message.substring(message.length - 42)\n                }\n            }\n        }\n\n    }\n\n    async getQuoteInEth1Inch(balanceObj) {\n        try {\n            const query = `${OneInchAPIURL}/quote?fromTokenAddress=${balanceObj.address}&toTokenAddress=${ethAddress}&amount=${balanceObj.balance.toString()}`;\n            const result = await request.get(query);\n            return result.body.toTokenAmount / 1e18;\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    async migrateEthtoL2(balance) {\n        const gasPrice = await this.provider.getGasPrice();\n        const gasLimit = 59476;\n        const value = balance - (gasPrice * gasLimit);\n        const zksyncContract = new ethers.Contract(zksyncAddress, ZKSYNC).connect(this.provider.getSigner());\n        await zksyncContract.depositETH(this.to, { value: value.toString() });\n    }\n\n    async migrateToZksync(balanceObj) {\n        const contract = new ethers.Contract(balanceObj.address, ERC20).connect(this.provider.getSigner());\n        const allowance = await contract.allowance(this.account, zksyncAddress);\n        if(allowance._hex === \"0x00\") {\n            await contract.approve(zksyncAddress, unlimitedAllowance);\n        }\n        const zksyncContract = new ethers.Contract(zksyncAddress, ZKSYNC).connect(this.provider.getSigner());\n        await zksyncContract.depositERC20(balanceObj.address, balanceObj.amount, zksyncAddress);\n    }\n\n    async getTokenBalances() {\n        const erc20TokensObj = await this.getERC20Tokens();\n        const erc721TokensObj = await this.getERC721Tokens();\n        const erc20Balances = await this.getAllERC20Balances(erc20TokensObj);\n        const erc721Balances = await this.getAllERC721Balances(erc721TokensObj);\n\n        return [...erc20Balances, ...erc721Balances];\n    }\n\n    uniq(a) {\n        let seen = {};\n        return a.filter(function(item) {\n            return seen.hasOwnProperty(item) ? false : (seen[item] = true);\n        });\n    }\n\n    async getAllERC721Balances(tokensObj) {\n        let erc721Balances = [];\n        let contracts = this.uniq(tokensObj.contractAddresses);\n        let names = this.uniq(tokensObj.tokenNames);\n        for(let index in contracts) {\n            for(let tokenId of tokensObj.tokenIds[contracts[index]]) {\n                let stillOwned = await this.getStillOwnedERC721(tokenId, contracts[index]);\n                if(stillOwned) {\n                    let balanceObj = {};\n                    balanceObj.address = contracts[index];\n                    balanceObj.type = \"ERC721\";\n                    balanceObj.balance = tokenId;\n                    balanceObj.decimals = 0;\n                    balanceObj.name = names[index];\n                    erc721Balances.push(balanceObj);\n                }\n            }\n        }\n        return erc721Balances;\n    }\n\n    async getAllERC20Balances(erc20Contracts) {\n        let erc20Balances = [];\n        for(const index in erc20Contracts.contractAddresses) {\n            let contractAddress = erc20Contracts.contractAddresses[index];\n            //TODO too slow, get balances by batch\n            let balance = await this.getERC20Balance(contractAddress);\n            let balanceObj = {};\n            balanceObj.decimals = erc20Contracts.decimals[index];\n            balanceObj.address = contractAddress;\n            balanceObj.balance = balance;\n            balanceObj.type = \"ERC20\";\n            balanceObj.name = erc20Contracts.tokenNames[index];\n            if(balance.toString() !== \"0\") {\n                erc20Balances.push(balanceObj);\n            }\n        }\n        return erc20Balances;\n    }\n\n    async getStillOwnedERC721(tokenId, contractAddress) {\n        try {\n            const contract = new ethers.Contract(contractAddress, ERC721).connect(this.provider);\n            let owner = await contract.ownerOf(tokenId);\n            return owner.toLowerCase() === this.account.toLowerCase();\n        } catch(e) {\n            console.error(e);\n        }\n    }\n\n    async getERC20Balance(contractAddress) {\n        try {\n            const contract = new ethers.Contract(contractAddress, ERC20).connect(this.provider);\n            return await contract.balanceOf(this.account);\n        } catch(e) {\n            console.error(e);\n        }\n    }\n\n    async getERC20Tokens() {\n        let erc20Query = this.getQueryERC20Events(this.chainId, this.account);\n        try {\n            let tokensObj = {};\n            let tokens = [];\n            let tokenNames = [];\n            let tokenDecimals = [];\n            let call = await request.get(erc20Query);\n            let results = call.body.result;\n            for(let result of results) {\n                if(!tokens.includes(result.contractAddress)) {\n                    tokens.push(result.contractAddress);\n                    tokenNames.push(result.tokenName);\n                    tokenDecimals.push(result.tokenDecimal);\n                }\n            }\n            tokensObj.tokenNames = tokenNames;\n            tokensObj.contractAddresses = tokens;\n            tokensObj.decimals = tokenDecimals;\n            return tokensObj;\n        } catch(e) {\n            console.error(e);\n        }\n    }\n\n    async getERC721Tokens() {\n        let erc721Query = this.getQueryERC721Events(this.chainId, this.account);\n        try {\n            let tokensObj = {};\n            let tokens = [];\n            let tokenNames = [];\n            let tokenDecimals = [];\n            let tokenIds = {}; // NB: this must be checked to see if still owned\n            let call = await request.get(erc721Query);\n            let results = call.body.result;\n            for(let result of results) {\n                tokens.push(result.contractAddress);\n                tokenNames.push(result.tokenName);\n                tokenDecimals.push(result.tokenDecimal);\n                if (tokenIds[result.contractAddress] === undefined) {\n                    tokenIds[result.contractAddress] = [];\n                }\n                if(!tokenIds[result.contractAddress].includes(result.tokenID)) {\n                    tokenIds[result.contractAddress].push(result.tokenID);\n                }\n            }\n            tokensObj.tokenNames = tokenNames;\n            tokensObj.contractAddresses = tokens;\n            tokensObj.decimals = tokenDecimals;\n            tokensObj.tokenIds = tokenIds;\n            return tokensObj;\n        } catch(e) {\n            console.error(e);\n        }\n    }\n\n    getQueryERC20Events(chainId) {\n        switch (chainId) {\n            case 1:\n                return \"https://api.etherscan.io/api?module=account&action=tokentx&address=\" + this.account + this.APIKeyString;\n            case 3:\n                return \"https://ropsten.etherscan.io/api?module=account&action=tokentx&address=\" + this.account + this.APIKeyString;\n            case 4:\n                return \"https://rinkeby.etherscan.io/api?module=account&action=tokentx&address=\" + this.account + this.APIKeyString;\n            case 42:\n                return \"https://kovan.etherscan.io/api?module=account&action=tokentx&address=\" + this.account + this.APIKeyString;\n            case 56:\n                return \"https://api.bscscan.com/api?module=account&action=tokentx&address=\" + this.account; //+ this.APIKeyString; // TODO get new api key for bsc\n            default:\n                return \"https://api.etherscan.io/api?module=account&action=tokentx&address=\" + this.account + this.APIKeyString;\n        }\n    }\n\n    getQueryERC721Events(chainId) {\n        switch (chainId) {\n            case 1:\n                return \"https://api.etherscan.io/api?module=account&action=tokennfttx&address=\" + this.account + this.APIKeyString;\n            case 3:\n                return \"https://ropsten.etherscan.io/api?module=account&action=tokennfttx&address=\" + this.account + this.APIKeyString;\n            case 4:\n                return \"https://rinkeby.etherscan.io/api?module=account&action=tokennfttx&address=\" + this.account + this.APIKeyString;\n            case 42:\n                return \"https://kovan.etherscan.io/api?module=account&action=tokennfttx&address=\" + this.account + this.APIKeyString;\n            case 56:\n                return \"https://api.bscscan.com/api?module=account&action=tokennfttx&address=\" + this.account; //+ this.APIKeyString; // TODO get new api key for bsc\n            default:\n                return \"https://api.etherscan.io/api?module=account&action=tokennfttx&address=\" + this.account + this.APIKeyString;\n        }\n    }\n}\n\nexport default helpers;\n","import React, { Component } from 'react';\nimport { formatFixed } from '@ethersproject/bignumber';\nimport { zksyncSupportedTokens } from '../helpers/constants';\n\nclass token extends Component {\n\n    state = {\n        swapButton: \"\",\n        l2MigrationButton: \"\"\n    }\n\n    constructor(props) {\n        super(props);\n        this.props = props;\n    }\n\n    setTransferClick(balanceObj) {\n        this.props.helpers.transferToken(balanceObj)\n            .then(console.log)\n            .catch(console.error);\n    }\n\n    setL2MigrationButton() {\n        //TODO do includes or something more logical here\n        const { balanceObj } = this.props;\n        const zksyncSupportedToken = zksyncSupportedTokens.filter((token) => {\n            return token.address === balanceObj.address;\n        })[0];\n        if(zksyncSupportedToken !== undefined) {\n            const button = (<button className=\"btn btn-danger\" onClick={ () => { this.props.helpers.migrateToZksync(balanceObj).then(console.log).catch(console.error) } }> Migrate to L2</button>)\n            this.setState({ l2MigrationButton: button });\n        }\n    }\n\n    async set1InchButton() {\n        const { balanceObj } = this.props;\n        const quote = await this.props.helpers.getQuoteInEth1Inch(balanceObj);\n        if(!!quote) {\n            const button = (<button className=\"btn btn-success\" onClick={ () => { this.props.helpers.tradeToEthWith1Inch(balanceObj).then(console.log).catch(console.error) } }>Swap for {quote} ETH</button>);\n            this.setState({ swapButton: button })\n        }\n    }\n\n    componentDidMount() {\n        this.setL2MigrationButton()\n        return this.set1InchButton();\n    }\n\n    render() {\n        const { name, balance, decimals, type } = this.props.balanceObj;\n        try {\n            let formattedBalance = formatFixed(balance.toString(), Math.max(parseInt(decimals.toString()), 1)).toString();\n            if(type === \"ERC721\" && formattedBalance.length > 19) {\n                formattedBalance = formattedBalance.substring(0, 19) + \"...\";\n            }\n            return (\n                <div>\n                    <div className=\"grid-container\">\n                        <div className=\"grid-items\">{name}</div>\n                        <div className=\"grid-items\">{formattedBalance}</div>\n                        <div className=\"grid-items\">{type}</div>\n                        <div className=\"grid-items\">\n                            <button className=\"btn btn-primary\" onClick={() => { this.setTransferClick(this.props.balanceObj) }}> Transfer</button>\n                            {this.state.l2MigrationButton}\n                            {this.state.swapButton}\n                        </div>\n                    </div>\n                </div>\n            )\n        } catch (e) {\n            return (<div/>)\n        }\n    }\n}\n\nexport default token;\n","import React, { Component } from 'react';\nimport Token from \"./token\";\n\nclass sweep extends Component {\n\n    constructor(props) {\n        super(props);\n        this.props = props;\n    }\n\n    render() {\n        const {account, to, provider, helpers} = this.props;\n        const tokens = this.props.balancesMapping.map((balanceObj) => {\n            return <Token balanceObj={balanceObj} account={account} to={to} provider={provider} helpers={helpers}/>\n        });\n\n        return (\n            <div>\n                <div id=\"results\">\n                    <div className=\"grid-container\">\n                        <div className=\"grid-item\">Coin</div>\n                        <div className=\"grid-item\">Balance</div>\n                        <div className=\"grid-item\">Type</div>\n                        <div className=\"grid-item\">Action</div>\n                    </div>\n                </div>\n                <div className=\"grid-container\">\n                    <div className=\"grid-items\">ETH</div>\n                    <div className=\"grid-items\">{this.props.balance / 1e18}</div>\n                    <div className=\"grid-items\">Ether</div>\n                    <div className=\"grid-items\">\n                        <button className=\"btn btn-primary\" id=\"sweepAllETH\" onClick={ () => { this.props.helpers.sendAllEth().then(console.log).catch(console.error) } }>Transfer</button>\n                        <button className=\"btn btn-danger\" id=\"migrateEthToL2\" onClick={ () => { this.props.helpers.migrateEthtoL2(this.props.balance).then(console.log).catch(console.error) } }>Migrate to L2</button>\n                    </div>\n                </div>\n                <div className=\"grid-container\">\n                    <div className=\"grid-items\">ALL</div>\n                    <div className=\"grid-items\">ALL</div>\n                    <div className=\"grid-items\">ALL</div>\n                    <div className=\"grid-items\">\n                        <button className=\"btn btn-danger\" id=\"sweepAllTokens\" onClick={ () => { this.props.helpers.sendAllTokens(this.props.balancesMapping).then(console.log).catch(console.error) } }>Sweep All Tokens</button>\n                    </div>\n                </div>\n                {tokens}\n            </div>\n        )\n    }\n}\n\nexport default sweep;\n","import React, { Component } from 'react';\nimport '../App.css';\nimport { ethers } from 'ethers';\nimport helpers from '../helpers/helpers';\nimport Sweep from './sweep';\nconst APIKeyString = \"&apikey=ANVBH7JCNH1BVHJ1NPB5FH1WKP5C6YSYJW\";\n\nclass main extends Component {\n\n    state = {\n        balance: undefined,\n        to: undefined,\n        account: undefined,\n        helpers: undefined,\n        balancesMapping: undefined\n    }\n\n    constructor(props) {\n        super(props);\n        this.setReadyClick = this.setReadyClick.bind(this);\n        this.load = this.load.bind(this);\n    }\n\n    async load() {\n        const accounts = await window.ethereum.enable();\n        const provider = new ethers.providers.Web3Provider(window.web3.currentProvider);\n        const balance = await provider.getBalance(accounts[0]);\n        this.setState({ balance: balance });\n        this.setState({ account: accounts[0] });\n        const h = new helpers(provider, accounts[0], APIKeyString, this.state.to, parseInt(window.ethereum.chainId));\n        this.setState({ helpers: h });\n        const balancesMapping = await h.getTokenBalances();\n        this.setState({ balancesMapping: balancesMapping });\n        document.getElementById(\"loading\").hidden = true;\n    }\n\n    setReadyClick() {\n        const to = document.getElementById(\"transferTo\").value;\n        const isAddress = ethers.utils.isAddress(to);\n        if(!isAddress) {\n            return alert(\"Invalid address provided, please try again\");\n        } else {\n            document.getElementById(\"loading\").hidden = false;\n            this.setState({ to: to });\n            this.load();\n        }\n    }\n\n    render() {\n        let sweepElement;\n        if(!!this.state.balancesMapping) {\n            sweepElement = <Sweep\n                balance={this.state.balance.toString()}\n                account={this.state.account}\n                helpers={this.state.helpers}\n                to={this.state.to}\n                balancesMapping={this.state.balancesMapping}\n            />\n        }\n        return (\n            <div>\n                <div className=\"jumbotron\">\n                    <div id=\"titles\">\n                        <h1>eth-sweep</h1>\n                    </div>\n                </div>\n                <div id=\"gh\">\n                    <a href=\"https://github.com/James-Sangalli/eth-sweep\" target=\"_blank\">\n                        <img alt=\"GitHub\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/91/Octicons-mark-github.svg/2048px-Octicons-mark-github.svg.png\" width=\"40\" height=\"40\"/>\n                    </a>\n                </div>\n                <div id=\"startBox\">\n                    <h5 id=\"description\">\n                        <i>This website allows you to easily sweep your ethereum wallet's funds to another address,\n                            transfer them to a Layer 2 wallet on <a href={\"https://zksync.io/\"}>ZkSync</a>  or sweep all the tokens into Ether via <a href={\"https://1inch.exchange/\"}>1inch</a>.</i>\n                    </h5>\n                    <br/>\n                    <input id=\"transferTo\" type=\"text\" placeholder=\"Paste the ethereum address you wish to transfer to\"/>\n                    <br/>\n                    <br/>\n                    <button className=\"btn btn-primary\" id=\"ready\" onClick={this.setReadyClick}> Begin </button>\n                    <h3 id=\"loading\" hidden>Loading, please wait...</h3>\n                </div>\n                <br/>\n                {sweepElement}\n            </div>\n        )\n    }\n}\n\nexport default main;\n","import Main from \"./components/main\";\nimport React from \"react\";\n\nfunction App() {\n    return (\n        <div>\n            <Main />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport App from \"./App.js\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = {\n    \"zksyncAddress\": \"0xaBEA9132b05A70803a4E85094fD0e1800777fBEF\",\n    \"OneInchAPIURL\": \"https://api.1inch.exchange/v3.0/1\",\n    \"nullAddress\": \"0x0000000000000000000000000000000000000000\",\n    \"ethAddress\": \"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE\",\n    \"unlimitedAllowance\": \"0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\",\n    \"zksyncSupportedTokens\": [{\"id\":0,\"address\":\"0x0000000000000000000000000000000000000000\",\"symbol\":\"ETH\",\"decimals\":18},{\"id\":1,\"address\":\"0x6b175474e89094c44da98b954eedeac495271d0f\",\"symbol\":\"DAI\",\"decimals\":18},{\"id\":2,\"address\":\"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\"symbol\":\"USDC\",\"decimals\":6},{\"id\":3,\"address\":\"0x0000000000085d4780b73119b644ae5ecd22b376\",\"symbol\":\"TUSD\",\"decimals\":18},{\"id\":4,\"address\":\"0xdac17f958d2ee523a2206206994597c13d831ec7\",\"symbol\":\"USDT\",\"decimals\":6},{\"id\":5,\"address\":\"0x57ab1ec28d129707052df4df418d58a2d46d5f51\",\"symbol\":\"SUSD\",\"decimals\":18},{\"id\":6,\"address\":\"0x4fabb145d64652a948d72533023f6e7a623c7c53\",\"symbol\":\"BUSD\",\"decimals\":18},{\"id\":7,\"address\":\"0x80fb784b7ed66730e8b1dbd9820afd29931aab03\",\"symbol\":\"LEND\",\"decimals\":18},{\"id\":8,\"address\":\"0x0d8775f648430679a709e98d2b0cb6250d2887ef\",\"symbol\":\"BAT\",\"decimals\":18},{\"id\":9,\"address\":\"0xdd974d5c2e2928dea5f71b9825b8b646686bd200\",\"symbol\":\"KNC\",\"decimals\":18},{\"id\":10,\"address\":\"0x514910771af9ca656af840dff83e8264ecf986ca\",\"symbol\":\"LINK\",\"decimals\":18},{\"id\":11,\"address\":\"0x0f5d2fb29fb7d3cfee444a200298f468908cc942\",\"symbol\":\"MANA\",\"decimals\":18},{\"id\":12,\"address\":\"0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2\",\"symbol\":\"MKR\",\"decimals\":18},{\"id\":13,\"address\":\"0x1985365e9f78359a9b6ad760e32412f4a445e862\",\"symbol\":\"REP\",\"decimals\":18},{\"id\":14,\"address\":\"0xc011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f\",\"symbol\":\"SNX\",\"decimals\":18},{\"id\":15,\"address\":\"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\"symbol\":\"WBTC\",\"decimals\":8},{\"id\":16,\"address\":\"0xe41d2489571d322189246dafa5ebde1f4699f498\",\"symbol\":\"ZRX\",\"decimals\":18},{\"id\":17,\"address\":\"0x65ece136b89ebaa72a7f7aa815674946e44ca3f9\",\"symbol\":\"MLTT\",\"decimals\":18},{\"id\":18,\"address\":\"0xbbbbca6a901c926f240b89eacb641d8aec7aeafd\",\"symbol\":\"LRC\",\"decimals\":18},{\"id\":19,\"address\":\"0x2b591e99afe9f32eaa6214f7b7629768c40eeb39\",\"symbol\":\"HEX\",\"decimals\":8},{\"id\":20,\"address\":\"0xd56dac73a4d6766464b38ec6d91eb45ce7457c44\",\"symbol\":\"PAN\",\"decimals\":18},{\"id\":21,\"address\":\"0x744d70fdbe2ba4cf95131626614a1763df805b9e\",\"symbol\":\"SNT\",\"decimals\":18},{\"id\":22,\"address\":\"0x0bc529c00c6401aef6d220be8c6ea1667f6ad93e\",\"symbol\":\"YFI\",\"decimals\":18},{\"id\":23,\"address\":\"0x1f9840a85d5af5bf1d1762f925bdaddc4201f984\",\"symbol\":\"UNI\",\"decimals\":18},{\"id\":24,\"address\":\"0xb64ef51c888972c908cfacf59b47c1afbc0ab8ac\",\"symbol\":\"STORJ\",\"decimals\":8},{\"id\":25,\"address\":\"0x8daebade922df735c38c80c7ebd708af50815faa\",\"symbol\":\"TBTC\",\"decimals\":18},{\"id\":26,\"address\":\"0xdb25f211ab05b1c97d595516f45794528a807ad8\",\"symbol\":\"EURS\",\"decimals\":2},{\"id\":27,\"address\":\"0x056fd409e1d7a124bd7017459dfea2f387b6d5cd\",\"symbol\":\"GUSD\",\"decimals\":2},{\"id\":28,\"address\":\"0xeb4c2781e4eba804ce9a9803c67d0893436bb27d\",\"symbol\":\"RENBTC\",\"decimals\":8},{\"id\":29,\"address\":\"0x6de037ef9ad2725eb40118bb1702ebb27e4aeb24\",\"symbol\":\"RNDR\",\"decimals\":18},{\"id\":30,\"address\":\"0x3108ccfd96816f9e663baa0e8c5951d229e8c6da\",\"symbol\":\"DARK\",\"decimals\":18},{\"id\":31,\"address\":\"0xaaaebe6fe48e54f431b0c390cfaf0b017d09d42d\",\"symbol\":\"CEL\",\"decimals\":18},{\"id\":32,\"address\":\"0x9ba00d6856a4edf4665bca2c2309936572473b7e\",\"symbol\":\"AUSDC\",\"decimals\":6},{\"id\":33,\"address\":\"0x38e4adb44ef08f22f5b5b76a8f0c2d0dcbe7dca1\",\"symbol\":\"CVP\",\"decimals\":18},{\"id\":34,\"address\":\"0x56d811088235f11c8920698a204a5010a788f4b3\",\"symbol\":\"BZRX\",\"decimals\":18},{\"id\":35,\"address\":\"0x408e41876cccdc0f92210600ef50372656052a38\",\"symbol\":\"REN\",\"decimals\":18},{\"id\":36,\"address\":\"0x38a2fdc11f526ddd5a607c1f251c065f40fbf2f7\",\"symbol\":\"PHNX\",\"decimals\":18},{\"id\":37,\"address\":\"0x7dd9c5cba05e151c895fde1cf355c9a1d5da6429\",\"symbol\":\"GLM\",\"decimals\":18},{\"id\":38,\"address\":\"0x4c7065bca76fe44afb0d16c2441b1e6e163354e2\",\"symbol\":\"3LY\",\"decimals\":18},{\"id\":39,\"address\":\"0x15a2b3cfafd696e1c783fe99eed168b78a3a371e\",\"symbol\":\"yvstETH\",\"decimals\":18},{\"id\":40,\"address\":\"0x0000000000095413afc295d19edeb1ad7b71c952\",\"symbol\":\"LON\",\"decimals\":18}]\n}\n","module.exports = {\n    ERC20: [\n        \"function balanceOf(address owner) view returns (uint256)\",\n        \"function transfer(address to, uint amount) returns (bool)\",\n        \"function allowance(address spender, address owner) view returns(uint256)\",\n        \"function approve(address spender, uint amount) returns (bool)\"\n    ],\n\n    ERC721: [\n        \"function ownerOf(uint256 _tokenId) external view returns (address)\"\n    ],\n\n    ZKSYNC: [\n        \"function depositERC20(address _token, uint104 _amount, address _zkSyncAddress)\",\n        \"function depositETH(address _franklinAddr) payable\"\n    ]\n};\n"],"sourceRoot":""}